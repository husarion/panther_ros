/**:
  controller_manager:
    ros__parameters:
      use_sim_time: false
      update_rate: 50

      joint_state_broadcaster:
        type: joint_state_broadcaster/JointStateBroadcaster
      panther_base_controller:
        type: diff_drive_controller/DiffDriveController
      imu_broadcaster:
        type: imu_sensor_broadcaster/IMUSensorBroadcaster

  imu_broadcaster:
    ros__parameters:
      sensor_name: imu
      frame_id: imu_link
      static_covariance_angular_velocity: [2.25e-4, 0.0, 0.0, 0.0, 2.25e-4, 0.0, 0.0, 0.0, 2.25e-4]  # Values measured experimentally
      static_covariance_linear_acceleration: [1.23e-5, 0.0, 0.0, 0.0, 1.23e-5, 0.0, 0.0, 0.0, 1.23e-5] # Values measured experimentally

  panther_base_controller:
    ros__parameters:
      left_wheel_names: ["fl_wheel_joint", "rl_wheel_joint"]
      right_wheel_names: ["fr_wheel_joint", "rr_wheel_joint"]

      wheel_separation: 0.616
      wheel_radius: 0.1016

      # todo: check it for panther
      # For skid drive kinematics it will act as ICR coefficient, kinematic model with ICR
      # coefficient isn't totally accurate and this coefficient can differ for various ground types
      wheel_separation_multiplier: 1.0

      left_wheel_radius_multiplier: 1.0
      right_wheel_radius_multiplier: 1.0

      publish_rate: 50.0
      odom_frame_id: odom
      base_frame_id: base_link
      twist_covariance_diagonal: [2.56e-6, 5.33e-7, 0.0, 0.0, 0.0, 1.85e-5] # Selected intuitively based on WH01 results

      # Whether to use feedback or commands for odometry calculations
      open_loop: false

      # Update odometry from velocity
      # in sensor fusion only velocity is used and with this setting it is more accurate
      position_feedback: false
      # velocity computation filtering
      velocity_rolling_window_size: 1

      enable_odom_tf: false

      cmd_vel_timeout: 0.5
      #publish_limited_velocity: true
      use_stamped_vel: false

      # Velocity and acceleration limits
      # Whenever a min_* is unspecified, default to -max_*
      linear:
        x:
          has_velocity_limits: true
          has_acceleration_limits: true
          has_jerk_limits: false
          max_velocity: 1.1 # m/s
          max_acceleration: 1.5 # m/s^2
          max_jerk: 0.0 # m/s^3

      angular:
        z:
          has_velocity_limits: true
          has_acceleration_limits: true
          has_jerk_limits: false
          max_velocity: 2.2 # rad/s
          max_acceleration: 3.2 # rad/s^2
          max_jerk: 0.0 # rad/s^3
