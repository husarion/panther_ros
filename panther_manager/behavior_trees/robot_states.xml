<?xml version="1.0" encoding="UTF-8"?>
<root BTCPP_format="4">
  <BehaviorTree ID="RobotStates">
    <Fallback name="Menage Robot State">
      <Sequence name="Error Sequence"
                _skipIf="robot_state != ROBOT_STATE_ERROR"
                _onSuccess="robot_state = ROBOT_STATE_ESTOP">
        <CallTriggerService name="Trigger E-Stop"
                            service_name="hardware/e_stop_trigger"/>
        <Sleep msec="1000"/>
      </Sequence>
      <Sequence name="E-Stop Sequence"
                _skipIf="robot_state != ROBOT_STATE_ESTOP"
                _onFailure="robot_state = ROBOT_STATE_STANDBY">
        <ScriptCondition name="Check E-Stop"
                         code="e_stop_state"
                         _onSuccess="robot_state = ROBOT_STATE_ESTOP"/>
      </Sequence>
      <Sequence name="Standby Sequence"
                _skipIf="robot_state != ROBOT_STATE_STANDBY">
        <Fallback name="Standby Transition Selector">
          <Fallback name="Check Docking Command"
                    _onFailure="docking_cmd = DOCKING_CMD_NONE">
            <CheckJoyMsg topic_name="joy"
                         timeout="2.0"
                         axes=""
                         buttons="0;0;0;1;1;1"
                         _onSuccess="robot_state = ROBOT_STATE_DOCKING;&#10;docking_cmd = DOCKING_CMD_DOCK"/>
            <CheckJoyMsg topic_name="joy"
                         timeout="2.0"
                         axes=""
                         buttons="1;0;0;0;1;1"
                         _onSuccess="robot_state = ROBOT_STATE_DOCKING;&#10;docking_cmd = DOCKING_CMD_UNDOCK"/>
          </Fallback>
          <ScriptCondition name="Check E-Stop"
                           code="e_stop_state"
                           _onSuccess="robot_state = ROBOT_STATE_ESTOP"/>
          <ScriptCondition name="Check E-Stop"
                           code="!e_stop_state"
                           _onSuccess="robot_state = ROBOT_STATE_STANDBY"/>
        </Fallback>
      </Sequence>
      <Sequence name="Docking Sequence"
                _skipIf="robot_state != ROBOT_STATE_DOCKING"
                _onSuccess="robot_state = ROBOT_STATE_SUCCESS"
                _onFailure="robot_state = ROBOT_STATE_ERROR"
                _post="docking_cmd = DOCKING_CMD_NONE">
        <Fallback name="Docking Selector">
          <DockRobot use_dock_id="true"
                     dock_id="main_dock"
                     dock_type="panther_charging_dock"
                     max_staging_time="100"
                     navigate_to_staging_pose="false"
                     action_name="dock_robot"
                     _skipIf="docking_cmd != DOCKING_CMD_DOCK"/>
          <UndockRobot dock_type="panther_charging_dock"
                       max_undocking_time="100"
                       action_name="undock_robot"
                       _skipIf="docking_cmd != DOCKING_CMD_UNDOCK"/>
        </Fallback>
      </Sequence>
      <Sequence name="Success Sequence"
                _skipIf="robot_state != ROBOT_STATE_SUCCESS"
                _onSuccess="robot_state = ROBOT_STATE_STANDBY">
        <Sleep msec="1000"/>
      </Sequence>
    </Fallback>
  </BehaviorTree>

  <!-- Description of Node Models (used by Groot) -->
  <TreeNodesModel>
    <Action ID="CallTriggerService"
            editable="true">
      <input_port name="service_name">ROS service name</input_port>
    </Action>
    <Condition ID="CheckJoyMsg"
               editable="true">
      <input_port name="topic_name">&#10;Topic name for sensor_msgs/Joy message type</input_port>
      <input_port name="timeout"
                  default="0.0">Max timeout to accept the msg</input_port>
      <input_port name="axes">Vector of provided axis inputs</input_port>
      <input_port name="buttons">Vector of provided button inputs</input_port>
    </Condition>
    <Action ID="DockRobot"
            editable="true">
      <input_port name="use_dock_id">bool value indicating whether to use dock ID</input_port>
      <input_port name="dock_id">dock ID</input_port>
      <input_port name="dock_type">type of the dock</input_port>
      <inout_port name="max_staging_time">maximum staging time</inout_port>
      <input_port name="navigate_to_staging_pose">bool value indicating whether to navigate to&#10;                staging pose</input_port>
      <input_port name="action_name">action name to call</input_port>
    </Action>
    <Action ID="UndockRobot"
            editable="true">
      <input_port name="dock_type">type of the dock</input_port>
      <input_port name="max_undocking_time">maximum time to get back to the staging pose</input_port>
      <input_port name="action_name">action name to call</input_port>
    </Action>
  </TreeNodesModel>

</root>
