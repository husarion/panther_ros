<launch>
  <arg name="use_ros_control" />
  <arg name="robot_description"
    default="$(find xacro)/xacro $(find panther_description)/urdf/panther.urdf.xacro
              wheel_config_path:=$(find panther_description)/config/$(arg wheel_type).yaml
              simulation_engine:=gazebo-classic
              use_ros_control:=$(arg use_ros_control)" />

  <node name="panther_spawn" pkg="gazebo_ros" type="spawn_model" output="screen"
    args="-urdf -param robot_description -model panther" />

  <group if="$(arg use_ros_control)">
    <rosparam command="load" file="$(find panther_gazebo)/config/panther_ros_controler.yaml" />
    <node name="panther_controller_spawner" pkg="controller_manager" type="spawner"
      output="screen" args="joint_state_controller panther_base_controller" />
  </group>

  <group unless="$(arg use_ros_control)">
    <rosparam command="load" file="$(find joint_state_controller)/joint_state_controller.yaml" />
    <node name="panther_controller_spawner" pkg="controller_manager" type="spawner"
      output="screen" args="joint_state_controller" />
  </group>

  <include file="$(find panther_description)/launch/panther_state_publisher.launch" if="$(arg publish_robot_state)">
    <arg name="robot_description" value="$(arg robot_description)" />
  </include>

</launch>
